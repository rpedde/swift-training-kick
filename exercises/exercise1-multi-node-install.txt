ALL NODES
---------

# set up the repos
dsh -c -g all sudo apt-get install -y python-software-properties
dsh -c -g all sudo add-apt-repository ppa:swift-core/release
dsh -c -g all sudo apt-get update
dsh -c -g all sudo mkdir /etc/swift
dsh -c -g all sudo chown swift /etc/swift

PROXY NODE
----------

# set up the swift.conf, including the hash suffix

sudo apt-get install -y swift

cat >/etc/swift/swift.conf <<EOF
[swift-hash]
# random unique string that can never change (DO NOT LOSE)
swift_hash_path_suffix = `od -t x8 -N 8 -A n </dev/random`
EOF

# copy the swift conf to the storage nodes
cp /etc/swift/swift.conf ~
dsh -c -g storage cp ~/swift.conf /etc/swift

# install swift proxy and memcached
sudo apt-get install -y swift-proxy memcached

# make memcache listen on all interfaces
sudo sed -i /etc/memcached.conf -e 's/127.0.0.1/0.0.0.0/g'
sudo service memcached restart

# make the proxy configuration file
cat >/etc/swift/proxy-server.conf <<EOF
[DEFAULT]
#cert_file = /etc/swift/cert.crt
#key_file = /etc/swift/cert.key
bind_port = 8080
workers = 8
user = swift

[pipeline:main]
pipeline = healthcheck cache swauth proxy-server

[app:proxy-server]
use = egg:swift#proxy
allow_account_management = true

[filter:swauth]
use = egg:swift#swauth
default_swift_cluster = local#http://192.168.254.11:8080/v1
# Highly recommended to change this key to something else!
super_admin_key = swauthkey

[filter:healthcheck]
use = egg:swift#healthcheck

[filter:cache]
use = egg:swift#memcache
memcache_servers = 192.168.254.11:11211
EOF

# build the rings
cd /etc/swift
swift-ring-builder account.builder create 18 3 1 
swift-ring-builder account.builder add z1-192.168.254.12:6002/sdb1 1000
swift-ring-builder account.builder add z2-192.168.254.13:6002/sdb1 1000
swift-ring-builder account.builder add z3-192.168.254.14:6002/sdb1 1000
swift-ring-builder account.builder add z4-192.168.254.15:6002/sdb1 1000

swift-ring-builder container.builder create 18 3 1 
swift-ring-builder container.builder add z1-192.168.254.12:6001/sdb1 1000
swift-ring-builder container.builder add z2-192.168.254.13:6001/sdb1 1000
swift-ring-builder container.builder add z3-192.168.254.14:6001/sdb1 1000
swift-ring-builder container.builder add z4-192.168.254.15:6001/sdb1 1000

swift-ring-builder object.builder create 18 3 1 
swift-ring-builder object.builder add z1-192.168.254.12:6000/sdb1 1000
swift-ring-builder object.builder add z2-192.168.254.13:6000/sdb1 1000
swift-ring-builder object.builder add z3-192.168.254.14:6000/sdb1 1000
swift-ring-builder object.builder add z4-192.168.254.15:6000/sdb1 1000

swift-ring-builder account.builder rebalance
swift-ring-builder container.builder rebalance
swift-ring-builder object.builder rebalance

# copy the rings to all the hosts
cp /etc/swift/*gz ~
dsh -c -g storage cp ~/*gz /etc/swift

# start the proxy server
sudo swift-init proxy start

# Install software on storage nodes
dsh -c -g storage sudo apt-get install -y swift-account swift-container swift-object xfsprogs parted

dsh -c -g storage sudo parted /dev/sdb mklabel msdos yes
dsh -c -g storage sudo parted /dev/sdb mkpart primary xfs 1M 100% yes

dsh -c -g storage sudo mkfs.xfs -f -i size=1024 /dev/sdb1

# mount the drives, and set them up to be mounted in /etc/fstab
dsh -c -g storage sudo mkdir -p /srv/node/sdb1
dsh -c -g storage sudo chown -R swift /srv/node/sdb1
dsh -c -g storage 'echo "/dev/sdb1 /srv/node/sdb1 xfs noatime,nodiratime,nobarrier,logbufs=8 0 0" | sudo tee -a /etc/fstab'
dsh -c -g storage sudo mount /srv/node/sdb1

# verify it's mounted on all the storage nodes
dsh -M -c -g storage 'mount | grep sdb'

# fix up permissions
dsh -c -g storage sudo chown -R swift: /srv/node

# set up rsync for object/acct/etc synchronization
cat > ~/rsyncd.conf <<EOF
uid = swift
gid = nogroup

log file = /var/log/rsyncd.log
pid file = /var/run/rsyncd.pid
address = 0.0.0.0

[account]
max connections = 2
path = /srv/node/
read only = false
lock file = /var/lock/account.lock

[container]
max connections = 2
path = /srv/node/
read only = false
lock file = /var/lock/container.lock

[object]
max connections = 2
path = /srv/node/
read only = false
lock file = /var/lock/object.lock
EOF

# copy the config file up to all the storage nodes,
# enable rsync, and start it.
dsh -c -g storage sudo cp ~/rsyncd.conf /etc
dsh -c -g storage sudo sed -i /etc/default/rsync -e 's/RSYNC_ENABLE=false/RSYNC_ENABLE=true/'
dsh -c -g storage sudo service rsync start

# verify rsync is runing
dsh -c -g storage 'ps auxw | grep rsyn[c]'

# create config files for account server, container server, and object server
cat > ~/account-server.conf <<EOF
[DEFAULT]
bind_ip = 0.0.0.0
workers = 2

[pipeline:main]
pipeline = account-server

[app:account-server]
use = egg:swift#account

[account-replicator]

[account-auditor]

[account-reaper]
EOF

cat > ~/container-server.conf <<EOF
[DEFAULT]
bind_ip = 0.0.0.0
workers = 2

[pipeline:main]
pipeline = container-server

[app:container-server]
use = egg:swift#container

[container-replicator]

[container-updater]

[container-auditor]
EOF

cat > ~/object-server.conf <<EOF
[DEFAULT]
bind_ip = 0.0.0.0
workers = 2

[pipeline:main]
pipeline = object-server

[app:object-server]
use = egg:swift#object

[object-replicator]

[object-updater]

[object-auditor]
EOF

# copy the config files to the storage nodes
dsh -c -g storage cp ~/{object,account,container}-server.conf /etc/swift

# and start the storage nodes
dsh -c -g storage sudo swift-init all start

# initialize the auth system
swauth-prep -A http://localhost:8080/auth/ -K swauthkey

# the storage node is now set up.  Next steps:  create users and test
# We'll do that as the next exercise.
